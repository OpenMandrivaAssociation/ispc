diff -up ispc-1.13.0/src/bitcode_lib.cpp.werror ispc-1.13.0/src/bitcode_lib.cpp
--- ispc-1.13.0/src/bitcode_lib.cpp.werror	2020-05-31 16:40:07.494881800 +0200
+++ ispc-1.13.0/src/bitcode_lib.cpp	2020-05-31 16:40:17.381946649 +0200
@@ -58,22 +58,18 @@ BitcodeLib::BitcodeLib(const unsigned ch
 
 // TODO: this is debug version: either remove or make it use friendly.
 void BitcodeLib::print() const {
-    const char *type = nullptr;
     std::string os = OSToString(m_os);
     switch (m_type) {
     case BitcodeLibType::Dispatch: {
-        type = "Dispatch";
         printf("Type: dispatch.    size: %zu, OS: %s\n", m_size, os.c_str());
         break;
     }
     case BitcodeLibType::Builtins_c: {
-        type = "Builtins-c";
         std::string arch = ArchToString(m_arch);
         printf("Type: builtins-c.  size: %zu, OS: %s, arch: %s\n", m_size, os.c_str(), arch.c_str());
         break;
     }
     case BitcodeLibType::ISPC_target: {
-        type = "ISPC-target";
         std::string target = ISPCTargetToString(m_target);
         std::string arch = ArchToString(m_arch);
         printf("Type: ispc-target. size: %zu, OS: %s, target: %s, arch(runtime) %s\n", m_size, os.c_str(),
diff -up ispc-1.13.0/src/type.cpp.unused ispc-1.13.0/src/type.cpp
--- ispc-1.13.0/src/type.cpp.unused	2020-05-31 16:53:28.823149519 +0200
+++ ispc-1.13.0/src/type.cpp	2020-05-31 16:56:58.824534746 +0200
@@ -2527,9 +2527,6 @@ llvm::FunctionType *FunctionType::LLVMFu
         return NULL;
     }
 
-    bool isStorageType = false;
-    if (CastType<AtomicType>(returnType) == NULL)
-        isStorageType = true;
     const Type *retType = returnType;
 
     llvm::Type *llvmReturnType = retType->LLVMType(g->ctx);
